@startuml
'https://plantuml.com/class-diagram

'属性初始化设置
skinparam file {
    FontColor #DarkGreen
    BackgroundColor #GhostWhite
}

cloud plantUML绘图flutter代码命名规则：as NamingRules{
    rectangle \
        "1、函数名：用‘'rectangle'修饰’，函数别名：在函数名头部增加所属的widget名称，尾部增加‘_M’（示例：Widget名_xxx_M）\
       \n2、Widget名：用‘'component'修饰或[]包裹’，别名：在Widget名尾部增加‘_W’（示例：xxx_W）（出现重名增加父类widget分割，示例：person_xxx_W）\
       \n3、界面起始布局别名：用‘'frame'修饰’,在xxx.dart文件名尾部增加‘_FW’（示例：xxx_FW）（出现重名增加路径分割，示例：xxx_dir1FW）\
       \n4、参数名：用‘'usecase'修饰或()包裹’,别名：在参数名头部增加所属的widget名称，尾部增加‘_P’（示例：Widget名_xxx_P）\
       \n5、路由跳转处理区：用‘'stack'修饰’,别名：固定头部‘route_’ + 加上游和下游界面的起始布局文件名称，（示例：route_aaa_2_bbb）\
       \n6、工具类：用‘'card'修饰，别名：在类名尾部增加‘_U’(示例：xxx_U)\
       "
}

package “v1 demo 层” as v1demo{

    file main.dart as file_main_dart {
        frame "Demo 启动时加载的首个页面布局结构" as main_FW{
            (runApp)
            component TranslationProvider{
                component TUIKitDemoApp{
                    component TencentChatApp{
                        component LaunchPage{
                            usecase "isWideScreen\n识别屏幕样式"  as LaunchPage_isWideScreen_P
                            LaunchPage_isWideScreen_P -right-> [MoveWindow\n宽屏]
                            LaunchPage_isWideScreen_P -left-> [Stack\n窄屏]
                        }

                        rectangle "initApp\n初始化IM" as TencentChatApp_initApp_M

                        LaunchPage .[hidden] TencentChatApp_initApp_M
                    }
    '                note bottom of TencentChatApp
    '                    组件内会做一些初始化逻辑
    '                    包括：im base监听、路由、屏幕适配等
    '                end note
                }
            }
            runApp -> [TranslationProvider]
        }
    }

    file init_step.dart as file_init_step_dart{
        card "InitStep\n应用初始化时一些前期处理逻辑" as init_step_U{
           rectangle "checkLogin\n检索用户登录状态" as InitStep_checkLogin_M
           rectangle "directToLogin\n跳转至登录界面" as InitStep_directToLogin_M{
               stack 执行路由跳转 as route_main_2_login
           }

           rectangle "directToHomePage\n跳转至首页" as InitStep_directToHomePage_M{
               (isWideScreen \n（识别屏幕样式）)  as homePage_screen_p
               stack "窄屏首页" as route_login_2_home_page
               stack "宽屏首页" as route_login_2_wide_screen1home_page
               homePage_screen_p -left-> route_login_2_home_page
               homePage_screen_p -right-> route_login_2_wide_screen1home_page
           }

           InitStep_checkLogin_M -> InitStep_directToLogin_M
           InitStep_checkLogin_M ..[hidden] InitStep_directToHomePage_M

        }
    }

    TencentChatApp_initApp_M .> InitStep_checkLogin_M

    file login.dart as file_login_dart{
        frame "Demo Login 页面布局结构" as loginPage_FW {
            [AppLogo\n顶部应用LogoUI加载Widget] as AppLogo_W
            [checkFirstEnter\n首次加载弹出“隐私协议”通知Widget] as LoginPage_checkFirstEnter_P
            [LoginForm\n用户账号输入widget] as LoginFrom_W
            rectangle "userLogin\n执行登录操作" as LoginPage_userLogin_M
            rectangle "directToHomePage\n登录成功跳转至首页" as LoginPage_directToHomePage

            AppLogo_W .. LoginPage_checkFirstEnter_P
            LoginPage_checkFirstEnter_P .. LoginFrom_W

            AppLogo_W ..[hidden] LoginPage_userLogin_M
            LoginPage_userLogin_M ..> LoginPage_directToHomePage
        }
    }
    route_main_2_login --> loginPage_FW

    LoginPage_directToHomePage -> InitStep_directToHomePage_M

    file home_page.dart as file_home_page_dart{
        frame "Demo 窄屏首页 页面布局结构" as homePage_FW {
            component TencentPage as home_page_TencentPage_W {
                rectangle "_showTooltip\n右上角窗口功能入口" as TencentPage__showTooltip_M {
                    card SuperTooltip\n展示弹窗数据{
                        rectangle _getTooltipContent\n获取窗口显示的数据 {
                            json contactTooltip{
                                "添加好友":"添加群聊"
                            }
                            json conversationTooltip{
                                "发起会话":"创建群聊"
                            }
                            (currentIndex\n导航类型) as _getTooltipContent_currentIndex_P

                            _getTooltipContent_currentIndex_P .left.> contactTooltip : = 1
                            _getTooltipContent_currentIndex_P .right.> conversationTooltip := 0
                        }
                    }
                }

                component BottomNavigationBar\n底部导航栏 as BottomNavigationBar_W{
                    [BarItem\n消息] as BarItem_Message_W
                    [BarItem\n通讯录] as BarItem_Contact_W
                    [BarItem\n我的] as BarItem_MyProfile_W

                    BarItem_Message_W .[hidden] BarItem_Contact_W
                    BarItem_Contact_W .[hidden] BarItem_MyProfile_W
                }

                TencentPage__showTooltip_M ..[hidden] BottomNavigationBar_W
                TencentPage__showTooltip_M ..[hidden] BottomNavigationBar_W


                rectangle body\n装载器 as home_page_TencentPage_body{
                    component Conversation\n会话列表页面 as home_page_TencentPage_body_Conversation_W{
                        component SearchEntry\n顶部搜索 as home_page_TencentPage_Conversation_SearchEntry_W{
                            (desktopWidget\n手机端) as home_page_TencentPage_Conversation_SearchEntry_desktopWidget_M
                            [SearchEntryNarrow\n窄屏搜索框] as home_page_TencentPage_Conversation_SearchEntry_SearchEntryNarrow_W

                            home_page_TencentPage_Conversation_SearchEntry_desktopWidget_M .> home_page_TencentPage_Conversation_SearchEntry_SearchEntryNarrow_W
                        }
                        [TIMUIKitConversation\nUIKIT层会话列表页] as home_page_TencentPage_Conversation_TIMUIKitConversation_W

                        home_page_TencentPage_Conversation_SearchEntry_W ..[hidden] home_page_TencentPage_Conversation_TIMUIKitConversation_W
                    }

                    component Contact\n通讯录界面 as home_page_TencentPage_body_Contact_W{

                    }

                    component MyProfile\n我的资料界面 as home_page_TencentPage_body_MyProfile_W{

                    }

                    home_page_TencentPage_body_Conversation_W .[hidden] home_page_TencentPage_body_Contact_W
                    home_page_TencentPage_body_Contact_W .[hidden] home_page_TencentPage_body_MyProfile_W
                }

                BottomNavigationBar_W ..[hidden] home_page_TencentPage_body

                BarItem_Message_W *.* home_page_TencentPage_body_Conversation_W
                BarItem_Contact_W *.* home_page_TencentPage_body_Contact_W
                BarItem_MyProfile_W *.* home_page_TencentPage_body_MyProfile_W
            }
        }
    }

    file wide_screen1home_page.dart as wide_screen1file_home_page_dart{
        frame "Demo 宽屏首页 页面布局结构" as wide_screen1homePage_FW {
            component LeftBar\n左侧导航Bar as LeftBar_W{
                [NavigationBarData\n消息] as LeftBar_NavigationBarData_Msg_W
                [NavigationBarData\n通讯录] as LeftBar_NavigationBarData_Contact
                [NavigationBarData\n我的] as LeftBar_NavigationBarData_My

                LeftBar_NavigationBarData_Msg_W ..[hidden]  LeftBar_NavigationBarData_Contact
                LeftBar_NavigationBarData_Contact ..[hidden] LeftBar_NavigationBarData_My
            }

            component Column as wide_screen1homePage_Column_W {
                rectangle 顶部右上角按钮 as wide_screen1homePage_right_top_buttons{
                    [MinimizeWindowButton\n最小化] as MinimizeWindowButton_W
                    [MaximizeWindowButton\n最大化] as MaximizeWindowButton_W
                    [CloseWindowButton\n关闭窗口] as CloseWindowButton_W

                    MinimizeWindowButton_W .[hidden] MaximizeWindowButton_W
                    MaximizeWindowButton_W .[hidden] CloseWindowButton_W
                }

                component IndexedStack\n右下角视图布局 as IndexedStack_W{
                    component ConversationAndChat\n会话列表+聊天页面 as ConversationAndChat_W {
                        component Search\n宽屏搜索 as ConversationAndChat_Search_W{

                        }
                        component Conversation\n会话列表页面 as ConversationAndChat_Conversation_W{
                            component SearchEntry\n顶部搜索 as ConversationAndChat_Conversation_SearchEntry_W{
                                (desktopWidget\n桌面端) as ConversationAndChat_Conversation_SearchEntry_desktopWidget_M
                                [SearchEntryWide\n宽屏搜索框] as ConversationAndChat_Conversation_SearchEntry_SearchEntryWide_W

                                ConversationAndChat_Conversation_SearchEntry_desktopWidget_M .> ConversationAndChat_Conversation_SearchEntry_SearchEntryWide_W
                            }
                            [TIMUIKitConversation\nUIKIT层会话列表页] as ConversationAndChat_Conversation_TIMUIKitConversation_W

                            ConversationAndChat_Conversation_SearchEntry_W ..[hidden] ConversationAndChat_Conversation_TIMUIKitConversation_W
                        }
                    }
                    [ContactsAndProfile\n通讯录+用户资料] as ContactsAndProfile_W
                    [MeAndTencent\n我的+IM功能设置] as MeAndTencent_W

                    ConversationAndChat_W .[hidden]  ContactsAndProfile_W
                    ContactsAndProfile_W .[hidden] MeAndTencent_W
                }

                wide_screen1homePage_right_top_buttons ..[hidden] IndexedStack_W
            }

            LeftBar_NavigationBarData_Msg_W . ConversationAndChat_W
            LeftBar_NavigationBarData_Contact . ContactsAndProfile_W
            LeftBar_NavigationBarData_My . MeAndTencent_W

            IndexedStack_W .[hidden] MinimizeWindowButton_W
        }
    }

    route_login_2_home_page --> file_home_page_dart
    route_login_2_wide_screen1home_page --> wide_screen1file_home_page_dart

    file search.dart as search_dart{
        frame "Demo 搜索 页面布局结构" as Search_FW {

        }
    }
}

NamingRules ..[hidden] v1demo


package “v1 TUIKit 层” as v1TUIKit{
    file tim_uikit_conversation.dart as tim_uikit_conversation_dart{
        component "UIKit 会话列表 页面布局结构" as TIMUIKitConversation_W{

            component conversationList\n会话列表 as  tim_uikit_conversation_conversationList{

                card TUIKitScreenUtils.getDeviceWidget\n获取设备类型 as conversationList_getDeviceWidget{
                    (desktopWidget\n桌面端) as conversationList_getDeviceWidget_desktopWidget
                    component AutoScrollTag as conversationList_getDeviceWidget_desktopWidget_AutoScrollTag{
                        component InkWell as conversationList_getDeviceWidget_desktopWidget_AutoScrollTag_InkWell{
                            component conversationLineItem as conversationList_getDeviceWidget_desktopWidget_AutoScrollTag_InkWell_conversationLineItem{
                                component TIMUIKitConversationItem\n会话列表item as desktopWidget_TIMUIKitConversationItem_W{

                                }
                            }

                            (onSecondaryTapDown) as conversationList_getDeviceWidget_desktopWidget_AutoScrollTag_InkWell_onSecondaryTapDown
                            card TUIKitWidePopup.showPopupWindow\n选中item弹出操作窗口 as conversationList_getDeviceWidget_desktopWidget_AutoScrollTag_InkWell_showPopupWindow{
                                component _getSecondaryMenu as conversationList_getDeviceWidget_desktopWidget_AutoScrollTag_InkWell_showPopupWindow__getSecondaryMenu{
                                    component _defaultSecondaryMenu as conversationList_getDeviceWidget_desktopWidget_AutoScrollTag_InkWell_showPopupWindow__getSecondaryMenu__defaultSecondaryMenu{
                                        [ColumnMenuItem\n清除消息] as conversationList_getDeviceWidget_desktopWidget_AutoScrollTag_InkWell_showPopupWindow__getSecondaryMenu__defaultSecondaryMenu_clean
                                        [ColumnMenuItem\n置顶/取消置顶] as conversationList_getDeviceWidget_desktopWidget_AutoScrollTag_InkWell_showPopupWindow__getSecondaryMenu__defaultSecondaryMenu_pin
                                        [ColumnMenuItem\n删除会话] as conversationList_getDeviceWidget_desktopWidget_AutoScrollTag_InkWell_showPopupWindow__getSecondaryMenu__defaultSecondaryMenu_delete

                                        conversationList_getDeviceWidget_desktopWidget_AutoScrollTag_InkWell_showPopupWindow__getSecondaryMenu__defaultSecondaryMenu_clean .[hidden] conversationList_getDeviceWidget_desktopWidget_AutoScrollTag_InkWell_showPopupWindow__getSecondaryMenu__defaultSecondaryMenu_pin
                                        conversationList_getDeviceWidget_desktopWidget_AutoScrollTag_InkWell_showPopupWindow__getSecondaryMenu__defaultSecondaryMenu_pin .[hidden] conversationList_getDeviceWidget_desktopWidget_AutoScrollTag_InkWell_showPopupWindow__getSecondaryMenu__defaultSecondaryMenu_delete
                                    }
                                }
                            }

                            conversationList_getDeviceWidget_desktopWidget_AutoScrollTag_InkWell_onSecondaryTapDown -> conversationList_getDeviceWidget_desktopWidget_AutoScrollTag_InkWell_showPopupWindow
                        }
                    }

                    (defaultWidget\n默认手机端) as conversationList_getDeviceWidget_defaultWidget
                    component AutoScrollTag as conversationList_getDeviceWidget_defaultWidget_AutoScrollTag{
                        component Slidable as conversationList_getDeviceWidget_defaultWidget_AutoScrollTag_Slidable{
                            component conversationLineItem as conversationList_getDeviceWidget_defaultWidget_AutoScrollTag_Slidable_conversationLineItem{
                                component TIMUIKitConversationItem\n会话列表item as defaultWidget_TIMUIKitConversationItem_W{

                                }
                            }
                        }

                        component ActionPane as conversationList_getDeviceWidget_defaultWidget_AutoScrollTag_ActionPane{
                            component slideChildren=_getSlideBuilder as conversationList_getDeviceWidget_defaultWidget_AutoScrollTag_ActionPane__getSlideBuilder{
                                component _defaultSlideBuilder as conversationList_getDeviceWidget_defaultWidget_AutoScrollTag_ActionPane__getSlideBuilder__defaultSlideBuilder{
                                    [ConversationItemSlidePanel\n清除] as conversationList_getDeviceWidget_defaultWidget_AutoScrollTag_ActionPane__getSlideBuilder__defaultSlideBuilder_clean
                                    [ConversationItemSlidePanel\n置顶/取消置顶] as conversationList_getDeviceWidget_defaultWidget_AutoScrollTag_ActionPane__getSlideBuilder__defaultSlideBuilder_pin
                                    [ConversationItemSlidePanel\n删除] as conversationList_getDeviceWidget_defaultWidget_AutoScrollTag_ActionPane__getSlideBuilder__defaultSlideBuilder_delete

                                    conversationList_getDeviceWidget_defaultWidget_AutoScrollTag_ActionPane__getSlideBuilder__defaultSlideBuilder_clean .[hidden] conversationList_getDeviceWidget_defaultWidget_AutoScrollTag_ActionPane__getSlideBuilder__defaultSlideBuilder_pin
                                    conversationList_getDeviceWidget_defaultWidget_AutoScrollTag_ActionPane__getSlideBuilder__defaultSlideBuilder_pin .[hidden] conversationList_getDeviceWidget_defaultWidget_AutoScrollTag_ActionPane__getSlideBuilder__defaultSlideBuilder_delete
                                }
                            }
                        }
                    }

                    conversationList_getDeviceWidget_desktopWidget -> conversationList_getDeviceWidget_desktopWidget_AutoScrollTag
                    conversationList_getDeviceWidget_defaultWidget -> conversationList_getDeviceWidget_defaultWidget_AutoScrollTag

                    conversationList_getDeviceWidget_desktopWidget ..[hidden] conversationList_getDeviceWidget_defaultWidget
                }



            }


        }
    }

    home_page_TencentPage_Conversation_TIMUIKitConversation_W ---> v1TUIKit

}
v1demo .[hidden] v1TUIKit


@enduml